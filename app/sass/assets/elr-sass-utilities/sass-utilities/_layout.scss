// Layout

@mixin elr-reset-element() {
    margin: 0;
    padding: 0;
    line-height: 1;
}

// Modern clearfix
// Use instead of overflow:hidden to clear floats

@mixin elr-clearfix() {
    &:after,
    &:before {
        content: '';
        display: table;
    }

    &:after {
        clear: both;
    }
}

@mixin elr-screen-reader() {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

@mixin elr-em-height($height) { height: to-rems($height); }
@mixin elr-em-width($width) { width: to-rems($width); }
@mixin elr-em-min-height($height) { min-height: to-rems($height); }
@mixin elr-em-min-width($width) { min-width: to-rems($width); }
@mixin elr-em-max-height($height) { max-height: to-rems($height); }
@mixin elr-em-max-width($width) { max-width: to-rems($width); }

// calculates em margin from px margin

@mixin elr-em-margin($qualifier: 'all', $top: null, $right: null, $bottom: null, $left: null) {

    @if ($qualifier == 'all') {
        @if ($right == null) {
            margin: to-rems($top);
        } @else if ($bottom == null) {
            margin: to-rems($top) to-rems($right);
        } @else {
            margin: to-rems($top) to-rems($right) to-rems($bottom) to-rems($left);
        }
    } @else if ($qualifier == 'top') {
        margin-top: to-rems($top);
    } @else if ($qualifier == 'right') {
        margin-right: to-rems($top);
    } @else if ($qualifier == 'bottom') {
        margin-bottom: to-rems($top);
    } @else if ($qualifier == 'left') {
        margin-left: to-rems($top);
    }
}

// calculates em padding from px padding

@mixin elr-em-padding($qualifier: 'all', $top: null, $right: null, $bottom: null, $left: null) {
    @if ($qualifier == 'all') {
        @if ($right == null) {
            padding: to-rems($top);
        } @else if ($bottom == null) {
            padding: to-rems($top) to-rems($right);
        } @else {
            padding: to-rems($top) to-rems($right) to-rems($bottom) to-rems($left);
        }
    } @else if ($qualifier == 'top') {
        padding-top: to-rems($top);
    } @else if ($qualifier == 'right') {
        padding-right: to-rems($top);
    } @else if ($qualifier == 'bottom') {
        padding-bottom: to-rems($top);
    } @else if ($qualifier == 'left') {
        padding-left: to-rems($top);
    }
}

// Centers an element horizontally on the page

@mixin elr-center-block($width: null) {
    display: block;
    margin-left: auto;
    margin-right: auto;
    float: none;

    @if $width != null {
        width: $width;
    }
}

@mixin elr-centerer($vertical: true, $horizontal: true) {
    position: absolute;

    @if ($vertical and $horizontal) {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    } @else if ($vertical) {
        top: 50%;
        transform: translate(0, -50%);
    } @else if ($horizontal) {
        left: 50%;
        transform: translate(-50%, 0);
    }
}
