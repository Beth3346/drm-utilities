 // Border Effects

// Creates a slightly transparent border with a hex color backup
// Accepts a hex color value and pixel value for border-width

@mixin elr-border-transparent($color, $thickness: 5px, $opacity: 0.7) {
    border-color: $color;
    border-color: rgba($color, $opacity); 
    border-width: $thickness;
    border-style: solid;    
}

// Creates an element with a stitched effect
// Takes an optional border and opacity argument

@mixin elr-stitched-box($color, $stitch-color: white, $border-radius: 0, $border-color: none, $opacity: 1) {
    border: 1px $stitch-color dashed;

    @if $opacity == 1 {
        background: $color;
    } @else {
        @include elr-background-transparent($color, $opacity);      
    }

    border-radius: $border-radius;

    @if $border-color == none {
        box-shadow: rgba($color, $opacity) 0 0 0 5px;
    } @else {
        box-shadow: 0 0 0 5px rgba($color, $opacity), 0 0 0 6px $border-color;
    }
}

// Creates a stitched top and bottom border

@mixin elr-stitched-row($color, $stitch-color: white, $border-color: none, $opacity: 1, $shadow: 'transparent') {
    padding-top: 5px;
    padding-bottom: 5px;
    border-top: 1px $stitch-color dashed;
    border-bottom: 1px $stitch-color dashed;
    border-left: none;
    border-right: none;

    @if $opacity == 1 {
        background: $color;
    
        @if $shadow == 'transparent' {
            @if $border-color == none {
                box-shadow: 0 0 0 3px $color;
            } @else {
                box-shadow: 0 0 0 3px $color, 0 5px 4px 2px $shadow;
            }           
        } @else {
            box-shadow: 0 0 0 3px $color, 0 5px 4px 2px $shadow;
        }

    } @elseif $opacity < 0.6 {
        @include elr-background-transparent($color, $opacity);
    
        @if $shadow == 'transparent' {
            @if $border-color == none {
                box-shadow: 0 0 0 3px rgba($color, $opacity);
            } @else {
                box-shadow: 0 0 0 3px rgba($color, $opacity + 0.2), 0 5px 4px 2px $shadow;
            }           
        } @else {
           box-shadow: 0 0 0 3px rgba($color, $opacity + 0.2), 0 5px 4px 2px $shadow;
        }

    } @else {
        @include elr-background-transparent($color, $opacity);
    
        @if $shadow == 'transparent' {
            @if $border-color == none {
                box-shadow: 0 0 0 3px rgba($color, $opacity);
            } @else {
                box-shadow: 0 0 0 3px rgba($color, $opacity), 0 5px 4px 2px $shadow;
            }           
        } @else {
            box-shadow: 0 0 0 3px rgba($color, $opacity), 0 5px 4px 2px $shadow;
        }       
    }
}

// Styles a <div> or <figure> with a transparent border that sits on top of the <img> element
// Specify a width and height on <div>/<figure> and <img> elements
// Make sure the containing element has a z-index of 100 and position: relative

@mixin elr-figure-transparent-border($color, $hover-color, $thickness: 5px) {
    margin: auto;
    transition: border .3s ease-out;
    @include elr-border-transparent($color, $thickness);

    img {
        z-index: -10;
        position: relative;
        top: -$thickness;
        left: -$thickness;
        background-color: $color;
        display: block;
    }

    &:hover {
        transition: border .3s ease-in;
        @include elr-border-transparent($hover-color, $thickness);
    }
}

// creates a bottom border with a slight shadow effect

@mixin elr-inset-border($color, $shadow-color: $shadow-color) {
    border-bottom: 1px solid $color;
    box-shadow: $shadow-color 0 1px 0;
}